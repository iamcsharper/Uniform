/**
 * This file is auto-generated by . Please do not modify it manually.
 */
import {
    LoginBody,
    LoginParams,
    LoginQuery,
    LoginResponse,
    LogoutParams,
    LogoutQuery,
    LogoutResponse,
    RefreshBody,
    RefreshParams,
    RefreshQuery,
    RefreshResponse,
    GetCurrentUserParams,
    GetCurrentUserQuery,
    GetCurrentUserResponse,
} from './types';

export interface LoginSchemaType {
    Body: LoginBody;
    Params: LoginParams;
    Querystring: LoginQuery;
    Reply: LoginResponse;
}
export const LoginSchema = {
    querystring: { type: 'object' },
    params: { type: 'object' },
    body: {
        type: 'object',
        properties: {
            login: { type: 'string', description: 'Логин', example: 'TestLogin' },
            password: { type: 'string', description: 'Пароль', example: 'testPassword775105k#i*' },
        },
    },
};

export interface LogoutSchemaType {
    Params: LogoutParams;
    Querystring: LogoutQuery;
    Reply: LogoutResponse;
}
export const LogoutSchema = { querystring: { type: 'object' }, params: { type: 'object' } };

export interface RefreshSchemaType {
    Body: RefreshBody;
    Params: RefreshParams;
    Querystring: RefreshQuery;
    Reply: RefreshResponse;
}
export const RefreshSchema = {
    querystring: { type: 'object' },
    params: { type: 'object' },
    body: { type: 'object', properties: { refresh_token: { type: 'string', description: 'Refresh token' } } },
};

export interface GetCurrentUserSchemaType {
    Params: GetCurrentUserParams;
    Querystring: GetCurrentUserQuery;
    Reply: GetCurrentUserResponse;
}
export const GetCurrentUserSchema = { querystring: { type: 'object' }, params: { type: 'object' } };
